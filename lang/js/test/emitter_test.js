// Licensed to the Apache Software Foundation (ASF) under one or more
// contributor license agreements.  See the NOTICE file distributed with
// this work for additional information regarding copyright ownership.
// The ASF licenses this file to You under the Apache License, Version 2.0
// (the "License"); you may not use this file except in compliance with
// the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*jshint
 strict: false
*/

var emitter = require('../lib/emitter.js');

exports.test = {
  'emit enum': function(test) {
    test.equal(
      emitter.emitEnum({type: 'enum', name: 'MyEnum', symbols: ['A', 'B']}),
      'function MyEnum(value) {\n' +
      '  if (MyEnum.symbols.indexOf(value) === -1) {\n' +
      '    throw new TypeError("invalid MyEnum value \\"" + value + "\\"");\n' +
      '  }\n' +
      '  return value;\n' +
      '}\n' +
      'MyEnum.symbols = ["A","B"];\n' +
      'MyEnum.A = "A";\n' +
      'MyEnum.B = "B";'
    );
    test.done();
  },

  'emit record': {
    setUp: function(done) {
      this.emptyRecord = {type: 'record', name: 'A', fields: []};
      done();
    },
    'doc comment': function(test) {
      test.equal(
        emitter.record.emitDocComment(this.emptyRecord),
        '/**\n * A (AUTOGENERATED)\n */'
      );
      test.done();
    },
    'constructor': function(test) {
      test.equal(
        emitter.record.emitConstructor(this.emptyRecord),
        'function A(data) {\n  if (typeof data !== "undefined") {\n    this.update(data);\n  }\n}'
      );
      test.done();
    }
  }
};

